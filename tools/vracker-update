#!/bin/sh

## vracker's tools
## update
##
## Copyright (C) 2016 Przemyslaw Pawelczyk <przemoc@gmail.com>
##
## This script is licensed under the terms of the MIT license.
## https://opensource.org/licenses/MIT

XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
VRACKER_CACHEDIR="${VRACKER_CACHEDIR:-$XDG_CACHE_HOME/vracker}"
XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
VRACKER_DATADIR="${VRACKER_DATADIR:-$XDG_DATA_HOME/vracker}"

[ -d "$VRACKER_DATADIR" ] || mkdir -p "$VRACKER_DATADIR"

if [ $# -eq 0 -o "$1" = "-h" -o "$1" = "--help" ]; then
	echo "Usage: $0 COLLECTIONS_PATH..."
	echo
	echo "Update archive of JSONs generated by scripts from given collections."
	echo
	echo "Result of each script in COLLECTIONS_PATH:"
	echo "    category/projectname/scriptname"
	echo "will be written to archive in:"
	echo "    scriptname/category/projectname.json"
	echo
	echo \
"scriptname should denote version retrieval origin, which is usually upstream,\
 but can be also some particular software repository, e.g. debian-testing.\
"
	echo
	echo "Archive is a git repository kept in VRACKER_DATADIR."
	echo
	echo "Current settings:"
	echo "VRACKER_CACHEDIR = $VRACKER_CACHEDIR"
	echo "VRACKER_DATADIR  = $VRACKER_DATADIR"
	exit 0
fi

[ "$1" = "--" ] && shift

export VRACKER_CACHEDIR VRACKER_DATADIR

( cd "$VRACKER_CACHEDIR" && {
	git rev-parse --is-inside-work-tree 1>/dev/null 2>&1 || git init .
} )

( cd "$VRACKER_DATADIR" && {
	git rev-parse --is-inside-work-tree 1>/dev/null 2>&1 || git init .
} )

while [ $# -gt 0 ]; do
	COLLS_PATH="$1"
	shift
	(
		cd "$COLLS_PATH"
		echo "Updating cache..."
		export VRACKER_DOWNLOAD_ONLY=1
		find * -type f -executable -print -exec vracker-update-script {} \;
		unset VRACKER_DOWNLOAD_ONLY
		( cd "$VRACKER_CACHEDIR" && git add . && git commit -m "Update." )
		echo
		echo "Updating archive..."
		export VRACKER_OFFLINE=1
		find * -type f -executable -print -exec vracker-update-script {} \;
		unset VRACKER_OFFLINE
	)
done
